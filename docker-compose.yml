services:
  mongodb:
    image: mongo:7.0
    container_name: example-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: example_db
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - example-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s

  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: example-rabbitmq
    restart: unless-stopped
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - example-network
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s

  minio:
    image: minio/minio:latest
    container_name: example-minio
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - example-network

  backend:
    build: ./backend
    container_name: helmet-backend
    restart: unless-stopped
    environment:
      - PORT=3000
      - MONGODB_URI=mongodb://admin:password@mongodb:27017/helmet_detection?authSource=admin
      - MONGODB_DB_NAME=helmet_detection
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
      - MINIO_ENDPOINT=minio
      - MINIO_PORT=9000
      - MINIO_USE_SSL=false
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
      - MINIO_REGION=us-east-1
      - JWT_SECRET=your-secret-key-here
      - SERVICE_NAME=helmet-backend
      - ENV=development
      - LOGTAIL_SOURCE_TOKEN=dummy-token
      - LOGTAIL_ENDPOINT=http://localhost
      - LOG_LEVEL=info
      - LOG_MAX_LENGTH=1000
      - PACKAGE_PREFIX=[HELMET-BACKEND]
      - LOGSTASH_URL=http://localhost
      - APM_SERVER_URL=http://localhost
      - OPENAI_API_KEY=dummy-key
      - GOOGLE_CLIENT_SECRET=dummy-secret
    ports:
      - "3000:3000"
    depends_on:
      mongodb:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      minio:
        condition: service_started
    networks:
      - example-network

  image-analysis:
    build: ./image-analysis
    container_name: helmet-image-analysis
    restart: unless-stopped
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=guest
      - RABBITMQ_PASSWORD=guest
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
      - MINIO_BUCKET=helmet-detection
      - MODEL_PATH=./models/yolov8n.pt
      - CONFIDENCE_THRESHOLD=0.5
      - IOU_THRESHOLD=0.4
    depends_on:
      rabbitmq:
        condition: service_healthy
      minio:
        condition: service_started
    networks:
      - example-network

  client:
    build: ./client
    container_name: helmet-client
    restart: unless-stopped
    ports:
      - "5173:4173"
    environment:
      - VITE_API_URL=http://localhost:3000/api
    depends_on:
      - backend
    networks:
      - example-network

volumes:
  mongodb_data:
  rabbitmq_data:
  minio_data:

networks:
  example-network:
    driver: bridge 