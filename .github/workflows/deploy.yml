name: Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'production'
        type: choice
        options:
        - staging
        - production

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'production' }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install backend dependencies
      working-directory: ./backend
      run: npm ci

    - name: Install frontend dependencies
      working-directory: ./client
      run: npm ci

    - name: Build backend
      working-directory: ./backend
      run: npm run build

    - name: Build frontend
      working-directory: ./client
      run: npm run build

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    # Uncomment and configure when you have a container registry
    # - name: Login to Container Registry
    #   uses: docker/login-action@v3
    #   with:
    #     registry: ${{ secrets.REGISTRY_URL }}
    #     username: ${{ secrets.REGISTRY_USERNAME }}
    #     password: ${{ secrets.REGISTRY_PASSWORD }}

    # - name: Build and push backend image
    #   uses: docker/build-push-action@v5
    #   with:
    #     context: ./backend
    #     push: true
    #     tags: |
    #       ${{ secrets.REGISTRY_URL }}/backend:latest
    #       ${{ secrets.REGISTRY_URL }}/backend:${{ github.sha }}

    # - name: Build and push frontend image
    #   uses: docker/build-push-action@v5
    #   with:
    #     context: ./client
    #     push: true
    #     tags: |
    #       ${{ secrets.REGISTRY_URL }}/frontend:latest
    #       ${{ secrets.REGISTRY_URL }}/frontend:${{ github.sha }}

    # Uncomment and configure for your deployment target
    # - name: Deploy to server
    #   uses: appleboy/ssh-action@v1.0.0
    #   with:
    #     host: ${{ secrets.HOST }}
    #     username: ${{ secrets.USERNAME }}
    #     key: ${{ secrets.KEY }}
    #     script: |
    #       cd /path/to/your/app
    #       docker-compose pull
    #       docker-compose up -d

    - name: Build summary
      run: |
        echo "### Deployment Summary :rocket:" >> $GITHUB_STEP_SUMMARY
        echo "- **Environment**: ${{ github.event.inputs.environment || 'production' }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Backend**: Built successfully" >> $GITHUB_STEP_SUMMARY
        echo "- **Frontend**: Built successfully" >> $GITHUB_STEP_SUMMARY 
